use [VietPhap_RatingApp]
go

IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
GO

BEGIN TRANSACTION;
GO

CREATE TABLE [VP_Audit] (
    [Id] uniqueidentifier NOT NULL,
    [Username] nvarchar(max) NOT NULL,
    [IpAddress] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NOT NULL,
    [EntityName] nvarchar(max) NOT NULL,
    [Action] nvarchar(max) NOT NULL,
    [Timestamp] datetime2 NOT NULL,
    [ObjectInfo] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_VP_Audit] PRIMARY KEY ([Id])
);
GO

CREATE TABLE [VP_Branch] (
    [Id] uniqueidentifier NOT NULL,
    [Name] nvarchar(max) NOT NULL,
    [Code] nvarchar(128) NOT NULL,
    CONSTRAINT [PK_VP_Branch] PRIMARY KEY ([Id])
);
GO

CREATE TABLE [VP_Comment] (
    [Id] uniqueidentifier NOT NULL,
    [Content] nvarchar(max) NOT NULL,
    [Level] int NOT NULL,
    [CommentType] int NOT NULL,
    [IsDeleted] bit NOT NULL,
    CONSTRAINT [PK_VP_Comment] PRIMARY KEY ([Id])
);
GO

CREATE TABLE [VP_User] (
    [Id] uniqueidentifier NOT NULL,
    [DisplayName] nvarchar(128) NOT NULL,
    [Email] nvarchar(128) NOT NULL,
    [UserName] nvarchar(128) NOT NULL,
    [Code] nvarchar(128) NOT NULL,
    [Password] nvarchar(max) NOT NULL,
    [PasswordSalt] varbinary(max) NOT NULL DEFAULT 0x,
    [BranchAddress] nvarchar(max) NOT NULL,
    [UserRole] int NOT NULL,
    [AccessToken] nvarchar(max) NOT NULL,
    [RefreshToken] nvarchar(max) NOT NULL,
    [AccessTokenExpireTime] datetime2 NOT NULL,
    [RefreshTokenExpireTime] datetime2 NOT NULL,
    [UserStatus] int NOT NULL DEFAULT 1,
    [CreatedOn] datetime2 NOT NULL,
    CONSTRAINT [PK_VP_User] PRIMARY KEY ([Id])
);
GO

CREATE TABLE [VP_DocumentRule] (
    [Id] uniqueidentifier NOT NULL,
    [FolderPath] nvarchar(max) NOT NULL,
    [RegardingId] uniqueidentifier NOT NULL DEFAULT '00000000-0000-0000-0000-000000000000',
    [CreatedById] uniqueidentifier NOT NULL,
    [ModifiedById] uniqueidentifier NOT NULL,
    [CreatedTime] datetime2 NOT NULL,
    [ModifiedTime] datetime2 NOT NULL,
    CONSTRAINT [PK_VP_DocumentRule] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_VP_DocumentRule_VP_User_CreatedById] FOREIGN KEY ([CreatedById]) REFERENCES [VP_User] ([Id]) ON DELETE NO ACTION,
    CONSTRAINT [FK_VP_DocumentRule_VP_User_ModifiedById] FOREIGN KEY ([ModifiedById]) REFERENCES [VP_User] ([Id]) ON DELETE NO ACTION
);
GO

CREATE TABLE [VP_TokenBlacklist] (
    [Id] uniqueidentifier NOT NULL,
    [AccessToken] nvarchar(max) NOT NULL,
    [RefreshToken] nvarchar(max) NOT NULL,
    [IssuedById] uniqueidentifier NOT NULL,
    [CreatedOn] datetime2 NOT NULL,
    [ExpiredAt] datetime2 NOT NULL,
    CONSTRAINT [PK_VP_TokenBlacklist] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_VP_TokenBlacklist_VP_User_IssuedById] FOREIGN KEY ([IssuedById]) REFERENCES [VP_User] ([Id])
);
GO

CREATE TABLE [VP_UserBill] (
    [Id] uniqueidentifier NOT NULL,
    [BillCode] nvarchar(max) NOT NULL,
    [CustomerName] nvarchar(max) NOT NULL,
    [CustomerCode] nvarchar(max) NOT NULL,
    [Phone] nvarchar(max) NOT NULL,
    [StartTime] datetime2 NOT NULL,
    [BranchCode] nvarchar(max) NOT NULL,
    [BranchAddress] nvarchar(max) NOT NULL,
    [Service] nvarchar(max) NOT NULL,
    [IsDeleted] bit NOT NULL,
    [CreatedById] uniqueidentifier NOT NULL,
    [ModifiedById] uniqueidentifier NOT NULL,
    [CreatedTime] datetime2 NOT NULL,
    [ModifiedTime] datetime2 NOT NULL,
    CONSTRAINT [PK_VP_UserBill] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_VP_UserBill_VP_User_CreatedById] FOREIGN KEY ([CreatedById]) REFERENCES [VP_User] ([Id]) ON DELETE NO ACTION,
    CONSTRAINT [FK_VP_UserBill_VP_User_ModifiedById] FOREIGN KEY ([ModifiedById]) REFERENCES [VP_User] ([Id]) ON DELETE NO ACTION
);
GO

CREATE TABLE [VP_UserResourceMapping] (
    [Id] uniqueidentifier NOT NULL,
    [UserId] uniqueidentifier NOT NULL,
    [BranchId] uniqueidentifier NOT NULL,
    CONSTRAINT [PK_VP_UserResourceMapping] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_VP_UserResourceMapping_VP_User_UserId] FOREIGN KEY ([UserId]) REFERENCES [VP_User] ([Id]) ON DELETE CASCADE
);
GO

CREATE TABLE [VP_Document] (
    [Id] uniqueidentifier NOT NULL,
    [Content] varbinary(max) NOT NULL,
    [Size] bigint NOT NULL,
    [FileName] nvarchar(max) NOT NULL,
    [FileType] nvarchar(max) NOT NULL,
    [MimeType] nvarchar(max) NOT NULL,
    [DocumentRuleEntityId] uniqueidentifier NOT NULL,
    [CreatedById] uniqueidentifier NOT NULL,
    [ModifiedById] uniqueidentifier NOT NULL,
    [CreatedTime] datetime2 NOT NULL,
    [ModifiedTime] datetime2 NOT NULL,
    CONSTRAINT [PK_VP_Document] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_VP_Document_VP_DocumentRule_DocumentRuleEntityId] FOREIGN KEY ([DocumentRuleEntityId]) REFERENCES [VP_DocumentRule] ([Id]) ON DELETE NO ACTION,
    CONSTRAINT [FK_VP_Document_VP_User_CreatedById] FOREIGN KEY ([CreatedById]) REFERENCES [VP_User] ([Id]) ON DELETE NO ACTION,
    CONSTRAINT [FK_VP_Document_VP_User_ModifiedById] FOREIGN KEY ([ModifiedById]) REFERENCES [VP_User] ([Id]) ON DELETE NO ACTION
);
GO

CREATE TABLE [VP_CommentResponse] (
    [Id] uniqueidentifier NOT NULL,
    [OtherComment] nvarchar(max) NOT NULL,
    [Level] int NOT NULL,
    [CommentType] int NOT NULL,
    [Comments] nvarchar(max) NOT NULL,
    [UserBillId] uniqueidentifier NOT NULL,
    [IsDeleted] bit NOT NULL,
    [CreatedById] uniqueidentifier NOT NULL,
    [ModifiedById] uniqueidentifier NOT NULL,
    [CreatedTime] datetime2 NOT NULL,
    [ModifiedTime] datetime2 NOT NULL,
    CONSTRAINT [PK_VP_CommentResponse] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_VP_CommentResponse_VP_User_CreatedById] FOREIGN KEY ([CreatedById]) REFERENCES [VP_User] ([Id]) ON DELETE NO ACTION,
    CONSTRAINT [FK_VP_CommentResponse_VP_User_ModifiedById] FOREIGN KEY ([ModifiedById]) REFERENCES [VP_User] ([Id]) ON DELETE NO ACTION,
    CONSTRAINT [FK_VP_CommentResponse_VP_UserBill_UserBillId] FOREIGN KEY ([UserBillId]) REFERENCES [VP_UserBill] ([Id]) ON DELETE CASCADE
);
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Code', N'Name') AND [object_id] = OBJECT_ID(N'[VP_Branch]'))
    SET IDENTITY_INSERT [VP_Branch] ON;
INSERT INTO [VP_Branch] ([Id], [Code], [Name])
VALUES ('16b3d63a-007a-45b1-85ad-54104a83ed0c', N'HL', N'Nha Khoa Úc Châu 1'),
('326347a7-840c-4098-9591-5d6ccec65aa4', N'HD', N'Cơ sở Hà Đông'),
('43c783d5-8e65-44e2-bd3e-6ea73fb8666a', N'DH', N'Cơ sở Trần Duy Hưng'),
('8b2d3a8a-fd45-4136-bb27-c606696a090f', N'ND', N'Cơ sở Nguyễn Du'),
('8eedff16-0053-449c-9d07-b5cc7215b5a8', N'UC', N'Nha Khoa Úc Châu 2'),
('9f037d25-10a9-4e21-b2d6-3c60fcc9095e', N'UB', N'Nha Khoa Úc Châu 3'),
('cb73fe75-d3d6-4cea-a0ca-6e476d9daac4', N'BN', N'Cơ sở Bắc Ninh'),
('ed5fd461-eca0-4eec-a9ab-6037e7cd2939', N'TH', N'Cơ sở Thái Hà'),
('f36cd75d-785f-4e4e-a808-43c07e4e292a', N'DN', N'Cơ sở Trần Đăng Ninh');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Code', N'Name') AND [object_id] = OBJECT_ID(N'[VP_Branch]'))
    SET IDENTITY_INSERT [VP_Branch] OFF;
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'CommentType', N'Content', N'IsDeleted', N'Level') AND [object_id] = OBJECT_ID(N'[VP_Comment]'))
    SET IDENTITY_INSERT [VP_Comment] ON;
INSERT INTO [VP_Comment] ([Id], [CommentType], [Content], [IsDeleted], [Level])
VALUES ('03aff69f-3235-4f8f-960d-4b5b65c4779e', 0, N'Nhân viên phòng khám thái độ tốt, tư vấn tận tâm', CAST(0 AS bit), 3),
('18950d3f-a34b-44dd-a2d8-8befc3b867b7', 0, N'Y bác sĩ khám điều trị yếu kém, chăm sóc sau điều trị kém', CAST(0 AS bit), 1),
('20c137fd-3d1e-45a4-84f7-67b3f5e01b9d', 0, N'Nhân viên phòng khám thái độ tốt, tư vấn tận tâm', CAST(0 AS bit), 4),
('31e87f3e-8cb4-4744-a889-1982e233fca0', 0, N'Y bác sĩ khám điều trị rất yếu kém, chăm sóc sau điều trị rất kém', CAST(0 AS bit), 0),
('44661aee-76d8-4526-8145-9395c46f5c8e', 0, N'Nhân viên phòng khám thái độ chưa tốt, tư vấn không đúng với nhu cầu', CAST(0 AS bit), 0),
('52d4da7b-6fe5-45d1-b57d-daee36092dfd', 0, N'Bảo vệ/nhân viên phòng khám thiếu nhiệt tình', CAST(0 AS bit), 1),
('53da7d20-7085-47d5-b6d5-42432ca09603', 0, N'Bảo vệ/nhân viên phòng khám thiếu nhiệt tình', CAST(0 AS bit), 0),
('6a74d774-2e5e-4db4-9e85-6f3f42493575', 0, N'Không gian phòng khám cũ, kém tiện nghi', CAST(0 AS bit), 1),
('71f72dfe-9b15-43fc-9bb2-5a64088e454e', 0, N'Không gian phòng khám cũ, kém tiện nghi', CAST(0 AS bit), 0),
('83ca1ef9-417b-439b-be61-8d6fb0fbc9e2', 0, N'Y bác sĩ khám điều trị tốt, chăm sóc sau điều trị tốt', CAST(0 AS bit), 3),
('8546bccf-b28b-4ff0-9229-086a0e8ad34e', 0, N'Bảo vệ/nhân viên phòng khám nhiệt tình, niềm nở', CAST(0 AS bit), 4),
('858ccd82-c04e-422f-ab0d-ab73a50bd0e4', 0, N'Y bác sĩ khám điều trị tốt, chăm sóc sau điều trị tốt', CAST(0 AS bit), 4),
('bfd9893d-6d51-41fe-a071-f829970e30ed', 0, N'Nhân viên phòng khám thái độ chưa tốt, tư vấn không đúng với nhu cầu', CAST(0 AS bit), 1),
('c3f83585-8f74-4de5-a9c9-5a57b71a95e7', 0, N'Bảo vệ/nhân viên phòng khám nhiệt tình, niềm nở', CAST(0 AS bit), 3),
('dafa87ae-8a08-4d84-9822-230da9987fd8', 0, N'Dịch vụ tạm ổn nhưng không có gì ấn tượng', CAST(0 AS bit), 2),
('f69fb2ec-8621-4189-b8d2-911679368e1d', 0, N'Không gian đơn điệu, không có điểm nhấn', CAST(0 AS bit), 2);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'CommentType', N'Content', N'IsDeleted', N'Level') AND [object_id] = OBJECT_ID(N'[VP_Comment]'))
    SET IDENTITY_INSERT [VP_Comment] OFF;
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'AccessToken', N'AccessTokenExpireTime', N'BranchAddress', N'Code', N'CreatedOn', N'DisplayName', N'Email', N'Password', N'PasswordSalt', N'RefreshToken', N'RefreshTokenExpireTime', N'UserName', N'UserRole') AND [object_id] = OBJECT_ID(N'[VP_User]'))
    SET IDENTITY_INSERT [VP_User] ON;
INSERT INTO [VP_User] ([Id], [AccessToken], [AccessTokenExpireTime], [BranchAddress], [Code], [CreatedOn], [DisplayName], [Email], [Password], [PasswordSalt], [RefreshToken], [RefreshTokenExpireTime], [UserName], [UserRole])
VALUES ('0b44ccde-4a10-4088-a76c-99b4c739455d', N'', '0001-01-01T00:00:00.0000000', N'', N'', '2024-03-16T01:12:37.7062902+07:00', N'ADMIN', N'', N'FB39200AFE118FEC62FECCFF5238DC9840399048AD5C76607FCC053D29F99501B15B8B1772B9844A0951ACEF78DDAC99E803C773F4D55D037E33E160A54CF38A', 0x7E3846FB43DBD4194E5A64449A08C8AE5E29EF6C18BC3C922B51843A3BE45ED67D370A75C813639424318841E7F7AA0A0A7E4A2D064AF71C5B0054F2246572E0, N'', '0001-01-01T00:00:00.0000000', N'vietphapadmin', 1),
('c86d9bc1-7d17-4008-a5ab-ba5e5c9810c2', N'', '0001-01-01T00:00:00.0000000', N'', N'', '2024-03-16T01:12:37.9840139+07:00', N'Super User', N'', N'7415F61E758A11DD174BDA49EE58A256869618C98EC748DF0EB03D318FFF76BC9E74B215EA2D8AB8EDE3CBF9E376837CEBEB3297AECFCD876EC134E9CE1FC427', 0x83EB9A847C759B96F86D3BDDA5FB51BDB3A4A4052F63BE17C78137CC7CD3E040E0F32D80CF15EE122F8D06008F4D3BBF128A22214160BD61A93F079CF4BCEC94, N'', '0001-01-01T00:00:00.0000000', N'logsuperuser', 4);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'AccessToken', N'AccessTokenExpireTime', N'BranchAddress', N'Code', N'CreatedOn', N'DisplayName', N'Email', N'Password', N'PasswordSalt', N'RefreshToken', N'RefreshTokenExpireTime', N'UserName', N'UserRole') AND [object_id] = OBJECT_ID(N'[VP_User]'))
    SET IDENTITY_INSERT [VP_User] OFF;
GO

CREATE INDEX [IX_VP_CommentResponse_CreatedById] ON [VP_CommentResponse] ([CreatedById]);
GO

CREATE INDEX [IX_VP_CommentResponse_ModifiedById] ON [VP_CommentResponse] ([ModifiedById]);
GO

CREATE UNIQUE INDEX [IX_VP_CommentResponse_UserBillId] ON [VP_CommentResponse] ([UserBillId]);
GO

CREATE INDEX [IX_VP_Document_CreatedById] ON [VP_Document] ([CreatedById]);
GO

CREATE INDEX [IX_VP_Document_DocumentRuleEntityId] ON [VP_Document] ([DocumentRuleEntityId]);
GO

CREATE INDEX [IX_VP_Document_ModifiedById] ON [VP_Document] ([ModifiedById]);
GO

CREATE INDEX [IX_VP_DocumentRule_CreatedById] ON [VP_DocumentRule] ([CreatedById]);
GO

CREATE INDEX [IX_VP_DocumentRule_ModifiedById] ON [VP_DocumentRule] ([ModifiedById]);
GO

CREATE INDEX [IX_VP_TokenBlacklist_IssuedById] ON [VP_TokenBlacklist] ([IssuedById]);
GO

CREATE INDEX [IX_VP_UserBill_CreatedById] ON [VP_UserBill] ([CreatedById]);
GO

CREATE INDEX [IX_VP_UserBill_ModifiedById] ON [VP_UserBill] ([ModifiedById]);
GO

CREATE UNIQUE INDEX [IX_VP_UserResourceMapping_UserId] ON [VP_UserResourceMapping] ([UserId]);
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240315181238_initdb', N'6.0.26');
GO

COMMIT;
GO

